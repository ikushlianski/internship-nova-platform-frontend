name: Build and deploy to nova-qa3

on:
  release:
    types: [created]
  workflow_dispatch:

  push:
    branches: ['*']

  pull_request:
    # branches: [main]

env:
  REGISTRY: registry.novaenglish.by
  REGISTRY_USERNAME: novaenglishby
  REGISTRY_PASSWORD: Str0ngP@ssw0rd!

jobs:
  build:

    strategy:
      matrix:
        service: ['marketing']

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to the Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"

      - name: Build and push 
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: Dockerfile-${{ matrix.service }}
          tags: ${{ env.REGISTRY }}/nova-front-${{ matrix.service }}:${{ steps.slug.outputs.sha7 }}

      - name: Save tag for the next step
        uses: edumserrano/share-jobs-data@v1
        with:
          command: set-data
          data: |
            tag: ${{ steps.slug.outputs.sha7 }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Read tag
        id: read-data
        uses: edumserrano/share-jobs-data@v1
        with:
          command: read-data-current-workflow

      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to the Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Deploy
        uses: WyriHaximus/github-action-helm3@v4.0.1
        with:
          exec: |
            helm upgrade --install nova-front helm/ -n nova-qa3 \
              --set images.tag=${{ steps.read-data.outputs.tag }}
          kubeconfig: '${{ secrets.KUBECONFIG }}'
          # overrule_existing_kubeconfig: "true"
