{{- if .Values.marketing.create }}
{{- if .Values.serviceAccounts.create }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.marketing.name }}
  namespace: {{.Release.Namespace}}
  {{- with .Values.serviceAccounts.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
---
{{- end }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.marketing.service.name }}
  namespace: {{ .Release.Namespace }}
  annotations:
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  selector:
    app: {{ .Values.marketing.name }}
  ports:
  - name: listener
    port: {{ .Values.marketing.service.port }}
    targetPort: {{ .Values.marketing.service.targetPort }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.marketing.name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.marketing.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.marketing.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.marketing.name }}
    spec:
      {{- if .Values.serviceAccounts.create }}
      serviceAccountName: {{ .Values.marketing.name }}
      {{- else }}
      serviceAccountName: default
      {{- end }}
      # terminationGracePeriodSeconds: 5
      # securityContext:
      #   fsGroup: 1000
      #   runAsGroup: 1000
      #   runAsNonRoot: true
      #   runAsUser: 1000
      imagePullSecrets:
      - name: regcred
      containers:
      - name: {{ .Values.marketing.name }}
        # securityContext:
        #   runAsUser: 1000
        image: {{ .Values.images.repository }}/{{ .Values.marketing.image.name }}:{{ .Values.images.tag }}
        # command: ["/bin/sh"]
        # args: ["-c", "npx nest start marketing --watch"]
        ports:
        - containerPort: {{ .Values.marketing.service.targetPort }}
        envFrom:
          {{- toYaml .Values.envFrom | nindent 12 }}
        resources:
        #   {{- toYaml .Values.marketing.resources | nindent 10 }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.marketing.name }}
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    # nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - {{ .Values.marketing.fqdn }}
      secretName: marketing-tls
  rules:
  - host: {{ .Values.marketing.fqdn }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ .Values.marketing.service.name }}
            port:
              number: {{ .Values.marketing.service.port }}
{{- end }}
